@use 'sass:math';
@use 'sass:map';

@use '../../style/mixin' as *;
@use './var' as *;

$module: #{$prefix}-col;

@mixin make-grid-column($breakpoint: '') {
  $cls-prefix: if($breakpoint == '', $module, #{$module}-#{$breakpoint});

  // span
  @for $i from 0 through $grid-columns {
    $percentage: math.percentage(math.div($i, $grid-columns));

    .#{$cls-prefix}-#{$i} {
      display: if($i == 0, none, block);
      box-sizing: border-box;
      // width: ($i / $grid-columns * 100%);
      // flex: 0 0 ($i / $grid-columns * 100%);
      width: $percentage;
      flex: 0 0 $percentage;
    }
  }

  // offset
  // 1 格自身, 列最多偏移 23 格
  $can-offset-columns: $grid-columns - 1;
  @for $i from 1 through $can-offset-columns {
    .#{$cls-prefix}-offset-#{$i} {
      margin-left: math.percentage(math.div($i, $grid-columns));
    }
  }

  // order
  @for $i from 1 through $grid-columns {
    .#{$cls-prefix}-order-#{$i} {
      order: $i;
    }
  }
}

@include make-grid-column();
@include make-grid-column(xs);

@media (min-width: map.get($breakpoint, sm)) {
  @include make-grid-column(sm);
}

@media (min-width: map.get($breakpoint, md)) {
  @include make-grid-column(md);
}

@media (min-width: map.get($breakpoint, lg)) {
  @include make-grid-column(lg);
}

@media (min-width: map.get($breakpoint, xl)) {
  @include make-grid-column(xl);
}

@media (min-width: map.get($breakpoint, xxl)) {
  @include make-grid-column(xxl);
}
