@use 'sass:map';
@use '../../style/mixin' as *;
@use './var' as *;

@mixin input-base() {
  display: flex;
  align-items: center;
  width: 100%;
  overflow: hidden;
  border-radius: $input-border-radius;
  border-width: 1px;
  border-style: solid;
  border-color: transparent;
  // border: 1px solid map.get($input-border-color, 'default');
  padding: $input-padding-md;
  background-color: map.get($input-bg-color, 'default');
  transition: $input-real-transition;
}

@mixin input-real-reset() {
  font: inherit;
  flex: 1;
  border: none;
  outline: none;
  padding: 0;
  min-width: 0;
  max-width: 100%;
  box-sizing: border-box;
  color: map.get($input-text-color, 'default');
  background-color: transparent;
  appearance: none;

  @include text-ellipsis;

  &::placeholder {
    color: $input-placeholder-color;
    user-select: none; // Chrome 会选中 placeholder
  }

  &:placeholder-shown {
    text-overflow: ellipsis; // 防止 placeholder 超出 input 宽度
  }

  // 隐藏Edge浏览器默认的密码框样式
  &[type='password']::-ms-reveal {
    display: none;
  }
}

@mixin input-disabled() {
  color: map.get($input-text-color, 'disabled');
  background-color: map.get($input-bg-color, 'disabled');

  &:hover {
    border-color: map.get($input-border-color, 'default');
  }

  > .#{$prefix}-input-real {
    cursor: not-allowed;
    color: map.get($input-text-color, 'disabled');
    text-overflow: initial;

    &::placeholder {
      color: map.get($input-text-color, 'disabled');
    }
  }

  & > .#{$prefix}-input-prefix,
  & > .#{$prefix}-input-suffix {
    .#{$prefix}-icon {
      color: map.get($input-text-color, 'disabled');

      &:hover {
        color: map.get($input-text-color, 'disabled');
      }
    }
  }
}

@mixin input-size() {
  &-md {
    height: $input-height-md;
    font: $input-font-md;
  }
  &-sm {
    height: $input-height-sm;
    font: $input-font-sm;
  }
  &-lg {
    height: $input-height-lg;
    font: $input-font-lg;
    padding: $input-padding-lg;
  }
}

@mixin input-status($status) {
  $hover-key: #{$status}-hover;
  $focus-key: #{$status}-focus;

  $normal-border-color: map.get($input-border-color, $status);
  $hover-border-color: map.get($input-border-color, $hover-key);
  $focus-box-shadow-color: map.get($input-box-shadow-color, $focus-key);

  &-#{$status} {
    border-color: $normal-border-color;

    &:hover {
      border-color: $hover-border-color;
    }

    &:focus,
    &.#{$prefix}-input-focus {
      border-color: $normal-border-color;
      box-shadow: 0 0 0 2px $focus-box-shadow-color;
    }
  }
}

@mixin input-align($align) {
  &-#{$align} {
    > .#{$prefix}-input-real {
      text-align: $align;
    }
  }
}

@mixin input-variant() {
  &-outline {
    border-color: map.get($input-border-color, 'default');

    &:hover {
      border-color: map.get($input-border-color, 'default-hover');
    }

    &:focus {
      border-color: map.get($input-border-color, 'default-focus');
      box-shadow: $input-box-shadow-focus;
    }

    &.#{$prefix}-input-focus {
      border-color: map.get($input-border-color, 'default-focus');
      box-shadow: $input-box-shadow-focus;
    }
  }

  &-borderless {
    border: none;
  }

  &-underline {
    border-radius: 0;
    border-width: 1px 0;
    border-style: solid none;
    border-color: transparent transparent map.get($input-border-color, 'default') transparent;
  }
}

@mixin input-affix() {
  &-prefix,
  &-suffix {
    display: inline-flex;
    align-items: center;
  }

  &-prefix {
    .#{$prefix}-icon {
      font-size: $icon-default;
      color: $input-real-prefix-icon-color;
    }

    &:not(:empty) {
      margin-right: $margin-sm;
    }
  }

  &-suffix {
    > .#{$prefix}-icon {
      color: $input-real-suffix-icon-color;
      transition: all $anim-duration-base linear;

      &:hover {
        color: $input-real-suffix-icon-color-hover;
        transition: all $anim-duration-base linear;
      }
    }

    &:not(:empty) {
      margin-left: $margin-sm;
    }
  }
}

@mixin input-clear() {
  button.#{$prefix}-input-clear {
    margin: 0;
    padding: 0;
    border: none;
    background-color: transparent;
  }

  // clear 图标
  .#{$prefix}-input-clear {
    cursor: pointer;
    opacity: 0;
    visibility: hidden;
    transition: $input-real-transition;
  }

  &:hover {
    .#{$prefix}-input-clear {
      opacity: 1;
      visibility: visible;
    }
  }
}
